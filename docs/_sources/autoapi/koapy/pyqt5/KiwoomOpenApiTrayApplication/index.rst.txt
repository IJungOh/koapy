:mod:`koapy.pyqt5.KiwoomOpenApiTrayApplication`
===============================================

.. py:module:: koapy.pyqt5.KiwoomOpenApiTrayApplication


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   koapy.pyqt5.KiwoomOpenApiTrayApplication.KiwoomOpenApiTrayApplication



.. py:class:: KiwoomOpenApiTrayApplication(args=())

   Bases: :class:`PyQt5.QtCore.QObject`

   .. attribute:: _should_restart
      

      

   .. attribute:: _should_restart_exit_code
      :annotation: = 1

      

   .. method:: _checkAndWaitForMaintananceAndThen(self, callback=None, args=None, kwargs=None)

      

   .. method:: _OnEventConnect(self, errcode)


   .. method:: _activate(self, reason)


   .. method:: _ensureConnectedAndThen(self, callback=None, args=None, kwargs=None)


   .. method:: _connect(self)


   .. method:: _showAccountWindow(self)


   .. method:: _configureAutoLogin(self)


   .. method:: _openOpenApiHome(self)


   .. method:: _openOpenApiQna(self)


   .. method:: _openGithub(self)


   .. method:: _openReadthedocs(self)


   .. method:: _onInterrupt(self, signum, _frame)


   .. method:: _exec(self)


   .. method:: _exit(self, return_code=0)


   .. method:: _nextRestartTime(self)


   .. method:: _startRestartNotifier(self)


   .. method:: _startEventLoopProcessor(self)


   .. method:: _exitForRestart(self)


   .. method:: __getattr__(self, name)


   .. method:: control(self)
      :property:


   .. method:: get_control(self)


   .. method:: exec_(self)


   .. method:: exit(self, return_code=0)


   .. method:: execAndExit(self)


   .. method:: execAndExitWithAutomaticRestart(self)


   .. method:: main(cls, args)
      :classmethod:



