:mod:`koapy.data.HistoricalStockPriceDataUpdater`
=================================================

.. py:module:: koapy.data.HistoricalStockPriceDataUpdater


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   koapy.data.HistoricalStockPriceDataUpdater.BaseHistoricalStockPriceDataUpdater
   koapy.data.HistoricalStockPriceDataUpdater.BaseHistoricalStockPriceDataToSqliteUpdater
   koapy.data.HistoricalStockPriceDataUpdater.HistoricalDailyStockPriceDataToSqliteUpdater
   koapy.data.HistoricalStockPriceDataUpdater.HistoricalMinuteStockPriceDataToSqliteUpdater
   koapy.data.HistoricalStockPriceDataUpdater.Historical15MinuteStockPriceDataToSqliteUpdater
   koapy.data.HistoricalStockPriceDataUpdater.BaseHistoricalStockPriceDataToExcelUpdater
   koapy.data.HistoricalStockPriceDataUpdater.HistoricalDailyStockPriceDataToExcelUpdater
   koapy.data.HistoricalStockPriceDataUpdater.HistoricalMinuteStockPriceDataToExcelUpdater
   koapy.data.HistoricalStockPriceDataUpdater.Historical15MinuteStockPriceDataToExcelUpdater



.. py:class:: BaseHistoricalStockPriceDataUpdater(codes, datadir, context=None, if_exists='auto', delete_remainings=True)

   Bases: :class:`abc.ABC`

   
   .. attribute:: _context
      

      if_exists:
      - force  = always overwrite
      - auto   = append if exists, create if not exists, overwrite if invalid
      - append = append if exists, create if not exists, ignore if invalid
      - ignore = ignore if exists, create if not exists


   .. method:: get_data(self, code, start_date, end_date)
      :abstractmethod:


   .. method:: read_data(self, filepath)
      :abstractmethod:


   .. method:: save_data(self, data, filepath)
      :abstractmethod:


   .. method:: check_last_date(self, filepath)
      :abstractmethod:


   .. method:: append_data(self, data, filepath)
      :abstractmethod:


   .. method:: extension(self)
      :property:


   .. method:: context(self)
      :property:


   .. method:: set_context(self, context)


   .. method:: check_failover_code(self)


   .. method:: save_failover_code(self, code)


   .. method:: get_start_date(self)


   .. method:: update_only(self)


   .. method:: delete_remainings(self)


   .. method:: update(self)



.. py:class:: BaseHistoricalStockPriceDataToSqliteUpdater(codes, datadir, context=None, if_exists='auto', delete_remainings=True)

   Bases: :class:`koapy.data.HistoricalStockPriceDataUpdater.BaseHistoricalStockPriceDataUpdater`

   
   .. method:: extension(self)
      :property:


   .. method:: tablename(self)
      :property:


   .. method:: read_data(self, filepath)



.. py:class:: HistoricalDailyStockPriceDataToSqliteUpdater(*args, **kwargs)

   Bases: :class:`koapy.data.HistoricalStockPriceDataUpdater.BaseHistoricalStockPriceDataToSqliteUpdater`

   
   .. method:: get_start_date(self)


   .. method:: get_data(self, code, start_date, end_date)


   .. method:: set_context(self, context)


   .. method:: write_data(self, data, filepath, if_exists='replace')


   .. method:: save_data(self, data, filepath)


   .. method:: append_data(self, data, filepath)


   .. method:: check_last_date_kiwoom(self, filepath)



.. py:class:: HistoricalMinuteStockPriceDataToSqliteUpdater(codes, datadir, interval, context=None, if_exists='auto', delete_remainings=True)

   Bases: :class:`koapy.data.HistoricalStockPriceDataUpdater.BaseHistoricalStockPriceDataToSqliteUpdater`

   
   .. method:: get_data(self, code, start_date, end_date)


   .. method:: set_context(self, context)


   .. method:: write_data_kiwoom(self, data, filepath, if_exists='replace')


   .. method:: write_data_cybos(self, data, filepath, if_exists='replace')


   .. method:: write_data(self, data, filepath, if_exists='replace')


   .. method:: save_data(self, data, filepath)


   .. method:: append_data(self, data, filepath)


   .. method:: check_last_date_kiwoom(self, filepath)


   .. method:: check_last_date_cybos(self, filepath)


   .. method:: check_last_date(self, filepath)



.. py:class:: Historical15MinuteStockPriceDataToSqliteUpdater(codes, datadir, context=None, if_exists='auto', delete_remainings=True)

   Bases: :class:`koapy.data.HistoricalStockPriceDataUpdater.HistoricalMinuteStockPriceDataToSqliteUpdater`

   

.. py:class:: BaseHistoricalStockPriceDataToExcelUpdater(codes, datadir, context=None, if_exists='auto', delete_remainings=True)

   Bases: :class:`koapy.data.HistoricalStockPriceDataUpdater.BaseHistoricalStockPriceDataUpdater`

   
   .. method:: extension(self)
      :property:


   .. method:: read_data(self, filepath)


   .. method:: save_data(self, data, filepath)


   .. method:: append_data(self, data, filepath)



.. py:class:: HistoricalDailyStockPriceDataToExcelUpdater(*args, **kwargs)

   Bases: :class:`koapy.data.HistoricalStockPriceDataUpdater.BaseHistoricalStockPriceDataToExcelUpdater`

   
   .. method:: get_start_date(self)


   .. method:: get_data(self, code, start_date, end_date)


   .. method:: set_context(self, context)


   .. method:: check_last_date(self, filepath)



.. py:class:: HistoricalMinuteStockPriceDataToExcelUpdater(codes, datadir, interval, context=None, if_exists='auto', delete_remainings=True)

   Bases: :class:`koapy.data.HistoricalStockPriceDataUpdater.BaseHistoricalStockPriceDataToExcelUpdater`

   
   .. method:: get_data(self, code, start_date, end_date)


   .. method:: set_context(self, context)


   .. method:: check_last_date_kiwoom(self, filepath)


   .. method:: check_last_date_cybos(self, filepath)


   .. method:: check_last_date(self, filepath)



.. py:class:: Historical15MinuteStockPriceDataToExcelUpdater(codes, datadir, context=None, if_exists='auto', delete_remainings=True)

   Bases: :class:`koapy.data.HistoricalStockPriceDataUpdater.HistoricalMinuteStockPriceDataToExcelUpdater`

   

